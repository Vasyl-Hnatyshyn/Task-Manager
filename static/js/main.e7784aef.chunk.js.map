{"version":3,"sources":["config/fire.js","components/Login/Login.js","components/Home/AddTaskWindow/Modal.js","components/Home/Header/Header.js","components/Home/Main/Main.js","components/Home/Home.js","App.js","serviceWorker.js","index.js"],"names":["fire","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Login","logIn","e","preventDefault","auth","signInWithEmailAndPassword","state","email","password","then","a","console","log","catch","err","singUp","createUserWithEmailAndPassword","inputChanges","setState","target","name","value","localStorage","setItem","id","type","placeholder","this","onChange","onClick","React","Component","Modal","showModal","modalStyle","closeModal","newTask","add","props","style","display","className","href","Header","logOut","signOut","author","src","alt","Main","changeName","newName","startEditing","editingElementId","finishEditing","newTasks","taskFolder","map","task","text","updateTasks","prevState","removeTask","key","onBlur","Home","addTaskToFolder","val","Math","floor","random","updateFolder","JSON","stringify","getFromStorageTasks","getItem","parse","update","filter","item","tasks","userEmail","user","slice","indexOf","App","authListener","onAuthStateChanged","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"oYAgBgBA,E,OAJHC,EAASC,cAVG,CACrBC,OAAQ,0CACRC,WAAY,qCACZC,YAAa,4CACbC,UAAW,qBACXC,cAAe,iCACfC,kBAAmB,eACnBC,MAAO,8C,QCsFIC,G,wDAxFX,aAAc,IAAD,8BACT,gBASRC,MAAM,SAACC,GACHA,EAAEC,iBAGFb,EAAKc,OAAOC,2BAA2B,EAAKC,MAAMC,MAAO,EAAKD,MAAME,UAAUC,MAAK,SAACC,GAChFC,QAAQC,IAAIF,MACbG,OAAM,SAACC,GACNH,QAAQC,IAAIE,OAjBH,EAuBjBC,OAAO,SAACb,GACJA,EAAEC,iBAEFb,EAAKc,OAAOY,+BAA+B,EAAKV,MAAMC,MAAO,EAAKD,MAAME,UAAUC,MAAK,SAACC,GACpFC,QAAQC,IAAIF,MACbG,OAAM,SAACC,GACNH,QAAQC,IAAIE,OA7BH,EAmCjBG,aAAe,SAACf,GAEZ,EAAKgB,SAAL,eACKhB,EAAEiB,OAAOC,KADd,UACuBlB,EAAEiB,OAAOE,SAGhCC,aAAaC,QAAQ,OAArB,UAA+B,EAAKjB,MAAMC,SAvCtC,EAAKD,MAAM,CACPC,MAAM,GACNC,SAAS,IAJJ,E,qDAoDb,OAAU,yBAAMgB,GAAG,OAEf,8BAEK,yCAED,2BACEJ,KAAM,QACNK,KAAO,QACPC,YAAc,YACdF,GAAG,QACHH,MAAQM,KAAKrB,MAAMC,MACnBqB,SAAUD,KAAKV,eAEjB,2BACEG,KAAO,WACPK,KAAO,WACPC,YAAc,cACdF,GAAG,WACHH,MAAQM,KAAKrB,MAAME,SACnBoB,SAAUD,KAAKV,eAEf,yBAAKO,GAAG,kBACV,4BAAQA,GAAK,aAAaK,QAASF,KAAK1B,OAAxC,WACA,4BAAQuB,GAAK,aAAaK,QAASF,KAAKZ,QAAxC,mB,GA7EQe,IAAMC,Y,QCiEXC,G,wDAnEV,aAAc,IAAD,8BACV,gBASNC,UAAU,WACR,EAAKf,SAAS,CAEVgB,WAAW,WAbD,EAkBhBC,WAAW,WACT,EAAKjB,SAAS,CAEVgB,WAAW,OACXE,QAAS,QAtBC,EA2BfA,QAAQ,SAAClC,GAEP,EAAKgB,SAAS,CAEVkB,QAAQlC,EAAEiB,OAAOE,SA5BlB,EAAKf,MAAM,CACL4B,WAAW,OACXE,QAAQ,MALJ,E,qDAoCN,IAAD,OAEJC,EAAOV,KAAKW,MAAZD,IAEP,OACE,6BACA,4BAAQb,GAAK,UAAWK,QAASF,KAAKM,WAAtC,iBAEE,yBAAKT,GAAG,gBAAgBe,MAAO,CAACC,QAAQb,KAAKrB,MAAM4B,aAEnD,yBAAKO,UAAU,iBAEZ,0BAAOjB,GAAG,QAAQK,QAAUF,KAAKQ,YAAjC,OAEA,8BAAUX,GAAG,MAAOE,YAAY,mBAAmBE,SAAUD,KAAKS,SAAUT,KAAKrB,MAAM8B,SAEvF,uBAAGM,KAAK,OAAOb,QAAS,WAExBQ,EAAI,EAAK/B,MAAM8B,SAEf,EAAKD,cACHX,GAAI,YALN,gB,GArDaM,IAAMC,YCkCXY,G,kNA9BfC,OAAS,WAELtD,EAAKc,OAAOyC,UAAUpC,MAAK,eAAiBI,OAAM,SAASC,GACtDH,QAAQC,IAAIE,MAGpBQ,aAAaC,QAAQ,OAAO,O,uDAGjB,IAELuB,EAAUnB,KAAKW,MAAfQ,OAEP,OAAO,6BACJ,gCACK,2CACA,yBAAKL,UAAU,aACf,yBAAKM,IAAI,+DAA+DC,IAAI,cAE3E,oCAAWF,EAAX,MACA,4BAAQjB,QAASF,KAAKiB,QAAtB,eAKL,0BAAMpB,GAAG,QAAT,U,GA5BiBM,IAAMC,Y,QC6EZkB,G,wDA5EV,WAAYX,GAAO,IAAD,8BACf,cAAMA,IASdY,WAAa,SAAAhD,GACZ,EAAKgB,SAAS,CAAEiC,QAASjD,EAAEiB,OAAOE,SAXZ,EActB+B,aAAe,YAAmB,IAAhB5B,EAAe,EAAfA,GAAIJ,EAAW,EAAXA,KACnB,EAAKF,SAAS,CAAEiC,QAAS/B,EAAMiC,iBAAkB7B,IAEhDb,QAAQC,IAAI,EAAKN,MAAM6C,UAjBL,EAoBvBG,cAAgB,WAChB,IAAMH,EAAU,EAAK7C,MAAM6C,QAC3BxC,QAAQC,IAAIuC,GACT,IAAMI,EAAW,EAAKjB,MAAMkB,WAAWC,KAAI,SAACC,GAAD,OAC1CA,EAAKlC,KAAO,EAAKlB,MAAM+C,iBAAvB,eAA+CK,EAA/C,CAAqDC,KAAMR,IAAWO,KAGtE/C,QAAQC,IAAI2C,GACZ,EAAKjB,MAAMsB,YAAYL,GACxB,EAAKrC,UAAS,SAAC2C,GAAD,MAAgB,CAAEV,QAAS,KAAME,iBAAkB,UA1B5D,EAAK/C,MAAM,CAEN+C,iBAAkB,KAClBF,QAAS,MANC,E,qDA+Bd,IAAD,SAEuBxB,KAAKW,MAA7BkB,EAFC,EAEDA,WAAYM,EAFX,EAEWA,WAEf,OACJ,iCAGA,yBAAKtC,GAAK,eAEPgC,EAAWC,KAAI,SAAAC,GACd,OAAO,yBAAKjB,UAAU,WAAWsB,IAAKL,EAAKlC,IAE5C,iCAAQ,EAAKlB,MAAM+C,mBAAsBK,EAAKlC,GAC1C,8BAAUA,GAAG,aAAawC,OAAQ,EAAKV,cAAe1B,SAAU,EAAKsB,aAEpE,yBAAKT,UAAW,WAAWZ,QAAS,kBAAM,EAAKuB,aAAaM,KAA5D,IAAsEA,EAAKC,KAA3E,KAHL,KAOC,0BAAMlB,UAAU,UAAUiB,EAAKZ,QAG7B,yBAAKL,UAAU,gBAEb,yBAAKM,IAAI,4DAA4DC,IAAI,cAEzE,yBAAKD,IAAI,sDAAsDC,IAAI,aAAenB,QAAS,WAAKiC,EAAWJ,iB,GA3DhG5B,IAAMC,YC2FVkC,G,wDAvFX,aAAc,IAAD,8BACT,gBAqBRC,gBAAgB,SAAAC,GAEV,IAAIzD,EAAG,CAACiD,KAAMQ,EAAMrB,OAAO,EAAKxC,MAAMwC,OAAQtB,IAAK,GAAD,OAAI4C,KAAKC,MAAsB,IAAhBD,KAAKE,YAE/DC,EAAY,sBAAO,EAAKjE,MAAMkD,YAAlB,CAA6B9C,IAE/C,EAAKQ,SAAS,CAEVsC,WAAWe,IAIlBjD,aAAaC,QAAQ,OAAQiD,KAAKC,UAAUF,KAlC/B,EAuCjBG,oBAAqB,WAEjB,IAAIhE,EAAIY,aAAaqD,QAAQ,QAEhB,OAANjE,GACC,EAAKQ,SAAS,CACdsC,WAAagB,KAAKI,MAAMlE,MA7CnB,EAmDjBoD,WAAW,SAAAJ,GAAO,IAAMmB,EAAO,EAAKvE,MAAMkD,WAAWsB,QAAO,SAASC,GAEnE,OAAOA,EAAKvD,KAAOkC,EAAKlC,MAIxBF,aAAaC,QAAQ,OAAQiD,KAAKC,UAAUI,IAE5C,EAAK3D,SAAS,CACAsC,WAAWqB,KA5DV,EAgEjBjB,YAAY,SAAAoB,GACV1D,aAAaC,QAAQ,OAAQiD,KAAKC,UAAUO,IAE5C,EAAK9D,SAAS,CACAsC,WAAWwB,KAjEnB,EAAK1E,MAAM,CACPkD,WAAW,GACXV,OAAO,MALF,E,gEAYb,IAAMmC,EAAY3D,aAAaqD,QAAQ,QACjCO,EAAOD,EAAYA,EAAUE,MAAM,EAAGF,EAAUG,QAAQ,MAAQ,GACvEzD,KAAKT,SAAS,CACX4B,OAAQoC,IAEdvD,KAAK+C,wB,+BAyDD,OAEC,yBAAMlD,GAAI,aAET,kBAAC,EAAD,CAAQa,IAAKV,KAAKuC,kBAClB,kBAAC,EAAD,CAAQpB,OAAQnB,KAAKrB,MAAMwC,SAC3B,kBAAC,EAAD,CAAOU,WAAY7B,KAAKrB,MAAMkD,WAAaI,YAAajC,KAAKiC,YAAcE,WAAYnC,KAAKmC,kB,GAjF/EhC,IAAMC,YC2CVsD,E,kDA1CX,aAAc,IAAD,8BACV,gBAaPC,aAAe,WAEXhG,EAAKc,OAAOmF,oBAAmB,SAACL,GAErBA,EAEK,EAAKhE,SAAS,CAACgE,SAGf,EAAKhE,SAAS,CAACgE,KAAM,WArBjC,EAAK5E,MAAM,CACP4E,KAAK,IAHA,E,gEAWTvD,KAAK2D,iB,+BAoBT,OAEI,yBAAK7C,UAAY,OAEK,OAAnBd,KAAKrB,MAAM4E,KAAgB,kBAAE,EAAF,MAAY,kBAAC,EAAD,W,GApChCpD,IAAMC,WCKJyD,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB3F,MAAK,SAAA4F,GACJA,EAAaC,gBAEdzF,OAAM,SAAA0F,GACL5F,QAAQ4F,MAAMA,EAAMC,c","file":"static/js/main.e7784aef.chunk.js","sourcesContent":["import firebase from 'firebase';\r\n\r\nconst   firebaseConfig = {\r\n    apiKey: \"AIzaSyCIQ3hVMLk7CC-RJYMsDOuhPZF1VNMYI7o\",\r\n    authDomain: \"task-manager-1a3cb.firebaseapp.com\",\r\n    databaseURL: \"https://task-manager-1a3cb.firebaseio.com\",\r\n    projectId: \"task-manager-1a3cb\",\r\n    storageBucket: \"task-manager-1a3cb.appspot.com\",\r\n    messagingSenderId: \"603956923046\",\r\n    appId: \"1:603956923046:web:de8e9ab7bbb307ffb68267\"\r\n  };\r\n  \r\nconst fire = firebase.initializeApp(firebaseConfig);\r\n\r\n\r\n\r\nexport default  fire;","import React from 'react';\r\nimport fire from '../../config/fire';\r\n\r\nimport './Login.css';\r\n\r\n\r\nclass Login extends React.Component {\r\n    constructor(){\r\n        super()\r\n        this.state={\r\n            email:\"\",\r\n            password:\"\"\r\n            \r\n            \r\n        }\r\n    }\r\n    \r\nlogIn=(e)=>{\r\n    e.preventDefault();\r\n    \r\n     \r\n    fire.auth().signInWithEmailAndPassword(this.state.email, this.state.password).then((a)=>{\r\n        console.log(a)\r\n    }).catch((err)=>{\r\n        console.log(err)\r\n    })\r\n    \r\n};\r\n  \r\n        \r\nsingUp=(e)=>{\r\n    e.preventDefault();\r\n   \r\n    fire.auth().createUserWithEmailAndPassword(this.state.email, this.state.password).then((a)=>{\r\n        console.log(a)\r\n    }).catch((err)=>{\r\n        console.log(err)\r\n    })\r\n    \r\n};\r\n    \r\n    \r\ninputChanges = (e) => {\r\n    \r\n    this.setState({\r\n        [e.target.name]:`${e.target.value}`\r\n    })\r\n    \r\n    localStorage.setItem('name',`${this.state.email}`)\r\n   \r\n}    \r\n    \r\n    \r\n\r\n\r\n    \r\n    \r\nrender(){\r\n    \r\n    return   (<div  id=\"box\" >\r\n    \r\n        <form  >\r\n                \r\n             <p>  Log In  </p>\r\n\r\n            <input \r\n              name= \"email\"\r\n              type = \"email\"  \r\n              placeholder = \" Email...\"\r\n              id=\"email\" \r\n              value= {this.state.email}\r\n              onChange={this.inputChanges}  / >\r\n                \r\n            <input \r\n              name = \"password\"\r\n              type = \"password\"  \r\n              placeholder = \"Password...\"\r\n              id=\"password\" \r\n              value= {this.state.password}\r\n              onChange={this.inputChanges}  / >\r\n                \r\n              <div id=\"logBtn_wrapper\">\r\n            <button id = \"btn-singIn\" onClick={this.logIn}> LogIn </button>\r\n            <button id = \"btn-singUp\" onClick={this.singUp}> SingUp </button>\r\n            </div >\r\n        \r\n        </form >\r\n\r\n        </div>)\r\n\r\n}\r\n}\r\n          \r\n\r\n\r\nexport default Login;\r\n\r\n  ","import React from 'react';\r\nimport './Modal.css';\r\n\r\nclass Modal extends React.Component {\r\n     constructor(){\r\n        super();\r\n        \r\n        this.state={\r\n              modalStyle:\"none\", \r\n              newTask:null   \r\n    };\r\n\r\n    }\r\n\r\n  showModal=()=>{\r\n    this.setState({\r\n        \r\n        modalStyle:\"block\"\r\n        \r\n    })\r\n}\r\n  \r\n  closeModal=()=> {\r\n    this.setState({\r\n        \r\n        modalStyle:\"none\",\r\n        newTask: null\r\n        \r\n    })\r\n}\r\n   \r\n   newTask=(e)=>{\r\n     \r\n     this.setState({\r\n         \r\n         newTask:e.target.value\r\n     })\r\n }\r\n\r\n   \r\n render () {\r\n\r\nconst {add} = this.props;\r\n \r\nreturn(\r\n  <div>\r\n  <button id = \"taskAdd\"  onClick={this.showModal}>Add new task </button>      \r\n    \r\n    <div id=\"modalB_graund\" style={{display:this.state.modalStyle}}>\r\n    \r\n    <div className=\"modal-content\"  >\r\n    \r\n       <span  id=\"close\" onClick={ this.closeModal}> x </span> \r\n        \r\n       <textarea id=\"txt\"  placeholder=\"Add your task...\" onChange={this.newTask}>{this.state.newTask}</textarea>\r\n\r\n       <a href=\"#add\" onClick={()=> {\r\n       \r\n       add(this.state.newTask)\r\n       \r\n       this.closeModal();\r\n      }} id =\"modalBtn\"> add </a>\r\n    </div>\r\n    \r\n </div>\r\n\r\n</div>\r\n        \r\n)}\r\n}\r\n\r\nexport default Modal;\r\n","import React from 'react';\r\nimport fire  from '../../../config/fire';\r\nimport './Header.css';\r\n\r\nclass Header extends React.Component {\r\n    \r\n    \r\nlogOut = () => {\r\n    \r\n    fire.auth().signOut().then(function() {  }).catch(function(err) {\r\n         console.log(err)\r\n    });\r\n    \r\n localStorage.setItem('name',null)    \r\n};\r\n    \r\n render () {\r\n\r\nconst {author} = this.props;\r\n \r\nreturn(<div>\r\n   <header>\r\n        <p>Task Manager</p>\r\n        <div className=\"userBlock\">\r\n        <img src=\"https://img.icons8.com/color/48/000000/reviewer-male--v1.png\" alt=\"user icon\"/>\r\n\r\n         <button > {author}  </button>\r\n         <button onClick={this.logOut}> LogOut  </button>\r\n\r\n        </div>\r\n\r\n    </header>\r\n    <span id=\"line\"> </span> \r\n    </div>\r\n)}\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport './Main.css';\r\n\r\n\r\nclass Main extends React.Component {\r\n     constructor(props){\r\n        super(props);\r\n        \r\n        this.state={\r\n           \r\n             editingElementId: null,\r\n             newName: null,\r\n        };\r\n }\r\n    \r\nchangeName = e => {\r\n this.setState({ newName: e.target.value})\r\n }\r\n \r\n startEditing = ({ id, name }) => {\r\n    this.setState({ newName: name, editingElementId: id})\r\n     \r\n     console.log(this.state.newName)\r\n }\r\n \r\nfinishEditing = () => {\r\nconst newName = this.state.newName\r\nconsole.log(newName)\r\n   const newTasks = this.props.taskFolder.map((task) => (\r\n    task.id === this.state.editingElementId ? { ...task, text: newName} : task\r\n    ))\r\n   \r\n    console.log(newTasks)\r\n    this.props.updateTasks(newTasks)\r\n   this.setState((prevState) => ({ newName: null, editingElementId: null }))\r\n }  \r\nrender(){\r\n\r\nconst {taskFolder ,removeTask}=this.props;\r\n    \r\n    return (\r\n<section>\r\n   \r\n     \r\n<div id = \"taskWrapper\" > \r\n            \r\n  {taskFolder.map(task=>{\r\n    return <div className=\"taskCard\" key={task.id}>   \r\n  \r\n   <div> { this.state.editingElementId ===  task.id? (\r\n       <textarea id=\"changeText\" onBlur={this.finishEditing} onChange={this.changeName}></textarea> \r\n    ) : (\r\n        <div className =\"editTask\" onClick={() => this.startEditing(task)} > {task.text} </div> \r\n\r\n    )} </div>\r\n        \r\n    <span className=\"uathor\">{task.author}</span>     \r\n                          \r\n                    \r\n      <div className=\"btnCardBlock\">\r\n        \r\n        <img src=\"https://img.icons8.com/color/48/000000/filled-message.png\" alt=\"mail icon\" />\r\n                    \r\n        <img src=\"https://img.icons8.com/color/48/000000/multiply.png\" alt=\"close icon\"   onClick={()=>{removeTask(task)\r\n        }} />\r\n          \r\n          </div>\r\n  \r\n     </div>\r\n     })\r\n    \r\n    }\r\n            \r\n         </div> \r\n\r\n    </section >\r\n\r\n)}\r\n}\r\n\r\n\r\nexport default Main;","import React from 'react';\r\nimport Modal from './AddTaskWindow/Modal';\r\nimport Header from './Header/Header';\r\nimport Main from './Main/Main';\r\nimport './Home.css';\r\n\r\n\r\nclass Home extends React.Component {\r\n    constructor(){\r\n        super();\r\n        \r\n        this.state={\r\n            taskFolder:[],\r\n            author:null,\r\n   \r\n    };\r\n }\r\n\r\n    \r\ncomponentDidMount () {\r\n    const userEmail = localStorage.getItem('name'); \r\n    const user = userEmail ? userEmail.slice(0, userEmail.indexOf('@')) : ''\r\n   this.setState({ \r\n      author: user,\r\n   });\r\nthis.getFromStorageTasks();\r\n    \r\n    }\r\n\r\n\r\naddTaskToFolder=val=> {\r\n  \r\n      let a ={text: val , author:this.state.author, id: +`${Math.floor(Math.random() * 1000)}` };\r\n    \r\n       const updateFolder = [...this.state.taskFolder,a];\r\n      \r\n       this.setState({\r\n           \r\n           taskFolder:updateFolder\r\n           \r\n       })\r\n    \r\n    localStorage.setItem('task', JSON.stringify(updateFolder));  \r\n \r\n}\r\n\r\n\r\ngetFromStorageTasks =()=>{\r\n    \r\n    let a = localStorage.getItem('task');\r\n               \r\n        if(a !== null) {  \r\n            this.setState({\r\n            taskFolder:  JSON.parse(a),\r\n                \r\n        })  \r\n         }\r\n    }\r\n             \r\nremoveTask=task=>{const update=this.state.taskFolder.filter(function(item){\r\n                            \r\n  return item.id !== task.id;\r\n                            \r\n    }) \r\n                        \r\n  localStorage.setItem('task', JSON.stringify(update));\r\n        \r\n  this.setState({                          \r\n                taskFolder:update\r\n                  })\r\n}\r\n\r\nupdateTasks=tasks=>{                        \r\n  localStorage.setItem('task', JSON.stringify(tasks));\r\n        \r\n  this.setState({                          \r\n                taskFolder:tasks\r\n     })\r\n}\r\n\r\nrender(){\r\n\r\n    return (\r\n        \r\n     <div  id =\"container\">\r\n        \r\n      <Modal  add={this.addTaskToFolder} />\r\n      <Header author={this.state.author} />\r\n      <Main  taskFolder={this.state.taskFolder } updateTasks={this.updateTasks } removeTask={this.removeTask }/>\r\n    \r\n     </div>)\r\n\r\n};\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\nimport './App.css';\nimport fire  from './config/fire';\nimport Login  from './components/Login/Login';\nimport Home  from './components/Home/Home';\n\n\nclass App extends React.Component {\n    constructor(){\n       super();\n        this.state={\n            user:\"\",\n           \n        }    \n    \n    }\n    \n    componentDidMount(){\n   \n        this.authListener();\n      };  \n    \nauthListener = ()=>{\n        \n    fire.auth().onAuthStateChanged((user)=> {\n            \n            if(user)\n                {\n                    this.setState({user})\n                }\n            else {\n                    this.setState({user: null})\n                 }\n        })\n}    \n    \n    render() {\n        \n         \n    return ( \n        \n        <div className = \"App\">     \n        \n        {  this.state.user!== null ? (< Home />):(<Login/>)   }\n        \n        </div>\n        \n    );\n    }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}