{"version":3,"sources":["config/fire.js","Login.js","components/Home.js","App.js","serviceWorker.js","index.js"],"names":["fire","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Login","logIn","e","preventDefault","auth","signInWithEmailAndPassword","state","email","password","then","a","console","log","catch","err","singUp","createUserWithEmailAndPassword","inputChanges","setState","target","name","value","localStorage","setItem","id","type","placeholder","this","onChange","onClick","React","Component","Home","modalWindowShow","document","addEventListener","scrollbar","body","clientWidth","window","innerWidth","querySelector","getElementById","style","overflow","marginLeft","logOut","signOut","addTask","task","text","author","Math","floor","random","updateFolder","taskFol","JSON","stringify","getFromStorageTasks","getItem","parse","edit","ed","b","c","innerHTML","inp","userEmail","user","slice","indexOf","className","src","alt","href","class","title","map","update","filter","item","App","authListener","onAuthStateChanged","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.beb9a27b.chunk.js","sourcesContent":["import firebase from 'firebase';\r\n\r\nconst   firebaseConfig = {\r\n    apiKey: \"AIzaSyCIQ3hVMLk7CC-RJYMsDOuhPZF1VNMYI7o\",\r\n    authDomain: \"task-manager-1a3cb.firebaseapp.com\",\r\n    databaseURL: \"https://task-manager-1a3cb.firebaseio.com\",\r\n    projectId: \"task-manager-1a3cb\",\r\n    storageBucket: \"task-manager-1a3cb.appspot.com\",\r\n    messagingSenderId: \"603956923046\",\r\n    appId: \"1:603956923046:web:de8e9ab7bbb307ffb68267\"\r\n  };\r\n  \r\nconst fire = firebase.initializeApp(firebaseConfig);\r\n\r\n\r\n\r\nexport default  fire;","import React from 'react';\r\nimport fire from './config/fire';\r\n\r\nimport './Login.css';\r\n\r\n\r\nclass Login extends React.Component {\r\n    constructor(){\r\n        super()\r\n        this.state={\r\n            email:\"\",\r\n            password:\"\"\r\n            \r\n            \r\n        }\r\n    }\r\n    \r\nlogIn=(e)=>{\r\n    e.preventDefault();\r\n    \r\n     \r\n    fire.auth().signInWithEmailAndPassword(this.state.email, this.state.password).then((a)=>{\r\n        console.log(a)\r\n    }).catch((err)=>{\r\n        console.log(err)\r\n    })\r\n    \r\n};\r\n  \r\n        \r\nsingUp=(e)=>{\r\n    e.preventDefault();\r\n   \r\n    fire.auth().createUserWithEmailAndPassword(this.state.email, this.state.password).then((a)=>{\r\n        console.log(a)\r\n    }).catch((err)=>{\r\n        console.log(err)\r\n    })\r\n    \r\n};\r\n    \r\n    \r\ninputChanges = (e) => {\r\n    \r\n    this.setState({\r\n        [e.target.name]:`${e.target.value}`\r\n    })\r\n    \r\n    localStorage.setItem('name',`${this.state.email}`)\r\n   \r\n}    \r\n    \r\n    \r\n\r\n\r\n    \r\n    \r\nrender(){\r\n    \r\n    return   (<div  id=\"box\" >\r\n    \r\n        <form  >\r\n                \r\n             <p>  Log In  </p>\r\n\r\n            <input \r\n              name= \"email\"\r\n              type = \"email\"  \r\n              placeholder = \" Email...\"\r\n              id=\"email\" \r\n              value= {this.state.email}\r\n              onChange={this.inputChanges}  / >\r\n                \r\n            <input \r\n              name = \"password\"\r\n              type = \"password\"  \r\n              placeholder = \"Password...\"\r\n              id=\"password\" \r\n              value= {this.state.password}\r\n              onChange={this.inputChanges}  / >\r\n                \r\n              <div id=\"logBtn_wrapper\">\r\n            <button id = \"btn-singIn\" onClick={this.logIn}> LogIn </button>\r\n            <button id = \"btn-singUp\" onClick={this.singUp}> SingUp </button>\r\n            </div >\r\n        \r\n        </form >\r\n\r\n        </div>)\r\n\r\n}\r\n}\r\n          \r\n\r\n\r\nexport default Login;\r\n\r\n  ","import React from 'react';\r\nimport fire from '../config/fire';\r\nimport './Home.css';\r\n\r\n\r\nclass Home extends React.Component {\r\n    constructor(){\r\n        super();\r\n        \r\n        \r\n        this.state={\r\n            taskFol:[],\r\n            author:\"\",\r\n            \r\n           \r\n        }\r\n    };\r\n\r\n    \r\n    \r\n    \r\n    \r\ncomponentDidMount () {\r\n    let userEmail = localStorage.getItem('name'); \r\n    \r\n    const user = userEmail.slice(0, userEmail.indexOf('@'))\r\n    \r\n    this.setState({ \r\n            author: user,\r\n        });\r\n       this.getFromStorageTasks(); \r\n       this.modalWindowShow(); \r\n    \r\n    }\r\n      \r\n    \r\n    \r\nmodalWindowShow = () => {\r\n    document.addEventListener(\"DOMContentLoaded\", function () {\r\n      var scrollbar = document.body.clientWidth - window.innerWidth + 'px';\r\n      console.log(scrollbar);\r\n      document.querySelector('[href=\"#openModal\"]').addEventListener('click', function () {\r\n          document.getElementById('txt').value = null;\r\n        document.body.style.overflow = 'hidden';\r\n        document.querySelector('#openModal').style.marginLeft = scrollbar;\r\n      });\r\n      document.querySelector('[href=\"#close\"]').addEventListener('click', function () {\r\n        document.body.style.overflow = 'visible';\r\n        document.querySelector('#openModal').style.marginLeft = '0px';\r\n          \r\n      });\r\n     document.querySelector('[href=\"#add\"]').addEventListener('click', function () {\r\n     document.body.style.overflow = 'visible';\r\n     document.querySelector('#openModal').style.marginLeft = '0px';\r\n          \r\n      });\r\n    });\r\n    \r\n};\r\n \r\n\r\n\r\n    \r\nlogOut = () => {\r\n    fire.auth().signOut().then(function() {\r\n    \r\n\r\n}).catch(function(err) {\r\n     console.log(err)\r\n});\r\n    \r\n localStorage.setItem('name',\"\")    \r\n};\r\n\r\n\r\naddTask = () => {\r\n    \r\n    let task = document.getElementById('txt').value;\r\n    let a ={text: task , author:`${this.state.author}`, id: +`${Math.floor(Math.random() * 1000)}` };\r\n    \r\n    const updateFolder = [...this.state.taskFol,a];\r\n    task === \"\" ? task = \"This task is empty\"   : \r\n    \r\n    this.setState({\r\n         \r\n        taskFol: updateFolder,\r\n          \r\n        })\r\n       localStorage.setItem('task', JSON.stringify(updateFolder));               \r\n}\r\n\r\n\r\ngetFromStorageTasks =()=>{\r\n    \r\n    let a = localStorage.getItem('task');\r\n               \r\n        if(a !== null) {  \r\n            this.setState({\r\n            taskFol:  JSON.parse(a),\r\n                \r\n        })  \r\n         }\r\n    }\r\n\r\n\r\n\r\nedit= ed =>{\r\n   \r\n    let b = ed.target\r\n    let c = b.innerHTML \r\n    b.innerHTML=`<textarea id=\"changeText\" type=text   >${c}</textarea>`\r\n    let inp =document.getElementById('changeText');\r\n    inp.addEventListener('focus', ()=>{ inp.value= c })     \r\n    inp.addEventListener('blur', ()=>{  inp !== \"\" ? b.innerHTML = `${inp.value}` : b.innerHTML = c});\r\n\r\n    }\r\n \r\nrender(){\r\n\r\n    return (\r\n     <div  id=\"container\">\r\n    \r\n    <header>\r\n        <p>Task Manager</p>\r\n        <div className=\"userBlock\">\r\n        <img src=\"https://img.icons8.com/color/48/000000/reviewer-male--v1.png\" alt=\"user icon\"/>\r\n\r\n         <button > {this.state.author}  </button>\r\n         <button onClick={this.logOut}> LogOut  </button>\r\n\r\n        </div>\r\n\r\n    </header>\r\n        \r\n    <span id=\"line\"> </span>  \r\n        \r\n  <section>\r\n             \r\n//modal window        \r\n     <a href=\"#openModal\" id = \"taskAdd\">Add new task</a>\r\n            \r\n     <div id=\"openModal\" class=\"modal\">\r\n       <div class=\"modal-content\">\r\n       <a href=\"#close\" title=\"Close\" class=\"close\">×</a>\r\n        \r\n       <textarea id=\"txt\"  name=\"textarea\" placeholder=\"Add your task...\"></textarea>\r\n\r\n        < a href=\"#add\" onClick={this.addTask} id =\"modalBtn\"> add </a>\r\n       \r\n      </div>\r\n    </div>\r\n \r\n//task card gallery\r\n\r\n  <div id = \"taskWrapper\" > \r\n            \r\n  {this.state.taskFol.map(task=>{\r\n    return <div className=\"taskCard\" >   \r\n  \r\n    <div className =\"editTask\" onClick={this.edit} > {task.text} </div> \r\n        \r\n    <span className=\"uathor\">{task.author}</span>     \r\n                          \r\n                    \r\n      <div class=\"btnCardBlock\">\r\n        \r\n        <img src=\"https://img.icons8.com/color/48/000000/filled-message.png\" alt=\"mail icon\" />\r\n                    \r\n        <img src=\"https://img.icons8.com/color/48/000000/multiply.png\" alt=\"close icon\"   onClick={()=>{\r\n                        \r\n          const update=this.state.taskFol.filter(function(item){\r\n                            \r\n          return item.id !== task.id;\r\n                            \r\n            }) \r\n                        \r\n          localStorage.setItem('task', JSON.stringify(update));\r\n        \r\n          this.setState({                          \r\n                        taskFol:update\r\n                          })\r\n \r\n            }} />\r\n        \r\n        \r\n          </div>\r\n        \r\n        \r\n        \r\n        \r\n                          \r\n\r\n      \r\n\r\n     </div>\r\n     })\r\n    \r\n    }\r\n            \r\n         </div> \r\n\r\n    </section >\r\n\r\n        \r\n     </div>)\r\n\r\n};\r\n    \r\n    \r\n}\r\n          \r\n\r\n\r\nexport default Home;\r\n","import React from 'react';\nimport './App.css';\nimport fire  from './config/fire';\nimport Login  from './Login';\nimport Home  from './components/Home';\n\n\nclass App extends React.Component {\n    constructor(){\n       super();\n        this.state={\n            user:\"\",\n           \n        }    \n    \n    }\n    \n    componentDidMount(){\n   \n        this.authListener();\n      };  \n  \n    \n\n    \n    \nauthListener = ()=>{\n        \n    fire.auth().onAuthStateChanged((user)=> {\n            \n            if(user)\n                {\n                    this.setState({user})\n                }\n            else {\n                    this.setState({user: null})\n                 }\n            \n        })\n    \n}    \n    \n    render() {\n        \n         \n    return ( \n        \n        <div className = \"App\">     \n        \n        {  this.state.user!== null ? (< Home />):(<Login/>)   }\n        \n        </div>\n        \n     \n\n    \n    );\n    }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}